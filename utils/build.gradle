plugins {
    id 'kotlin-multiplatform'
}

kotlin {
    targets {
        fromPreset(presets.jvm, 'jvm')
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-common'
                api "com.kgl:kgl-glfw:${kglVersion}"
                api "com.kgl:kgl-glfw-vulkan:${kglVersion}"
                api "com.kgl:kgl-vulkan:${kglVersion}"
            }
        }
        commonTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-common'
                implementation 'org.jetbrains.kotlin:kotlin-test-annotations-common'
            }
        }
        jvmMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

                api "org.lwjgl:lwjgl:${lwjglVersion}:${lwjglNatives}"
                api "org.lwjgl:lwjgl-glfw:${lwjglVersion}:${lwjglNatives}"
            }
        }
        jvmTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test'
                implementation 'org.jetbrains.kotlin:kotlin-test-junit'
            }
        }
    }
    if (os.isWindows() || System.getProperty("idea.active") != "true") {
        targets {
            fromPreset(presets.mingwX64, "mingw")
        }
        sourceSets {
            mingwMain {
                kotlin.srcDirs = ["src/nativeMain/kotlin"]
                resources.srcDirs = ["src/nativeMain/resources"]
            }
            mingwTest {
                kotlin.srcDirs = ["src/nativeTest/kotlin"]
                resources.srcDirs = ["src/nativeTest/resources"]
            }
        }
    }
    if (os.isLinux() || System.getProperty("idea.active") != "true") {
        targets {
            fromPreset(presets.linuxX64, "linux")
        }
        sourceSets {
            linuxMain {
                kotlin.srcDirs = ["src/nativeMain/kotlin"]
                resources.srcDirs = ["src/nativeMain/resources"]
            }
            linuxTest {
                kotlin.srcDirs = ["src/nativeTest/kotlin"]
                resources.srcDirs = ["src/nativeTest/resources"]
            }
        }
    }
    if (os.isMacOsX() || System.getProperty("idea.active") != "true") {
        targets {
            fromPreset(presets.macosX64, "macos")
        }
        sourceSets {
            macosMain {
                kotlin.srcDirs = ["src/nativeMain/kotlin"]
                resources.srcDirs = ["src/nativeMain/resources"]
            }
            macosTest {
                kotlin.srcDirs = ["src/nativeTest/kotlin"]
                resources.srcDirs = ["src/nativeTest/resources"]
            }
        }
    }
}
